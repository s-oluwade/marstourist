generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_CONNECTION_STRING")
}

model CartItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  productId String  @db.ObjectId
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  quantity  Int
  cartId    String  @db.ObjectId
  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)

  @@map("cartitems")
}

model Cart {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  items     CartItem[]
  userId    String     @db.ObjectId
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("carts")
}

model Product {
  id                 String     @id @default(auto()) @map("_id") @db.ObjectId
  v                  Int?       @map("__v")
  brand              String
  category           String
  description        String
  discountPercentage Float?
  images             String[]
  price              Int
  stock              Int?
  thumbnail          String?
  title              String     @unique(map: "title_1")
  CartItem           CartItem[]

  @@map("products")
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  topic     String
  content   String
  likes     String[]
  createdAt DateTime @db.Date
  updatedAt DateTime @db.Date
  v         Int      @map("__v")

  @@map("posts")
}

model Purchase {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  v         Int      @map("__v")
  brand     String
  category  String
  createdAt DateTime @db.Date
  imageUrl  String
  userId    String   @db.ObjectId
  productId String   @db.ObjectId
  quantity  Int
  title     String
  updatedAt DateTime @db.Date
  User      User?    @relation(fields: [userId], references: [id])

  @@map("purchases")
}

model User {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  v             Int          @map("__v")
  base          String?
  bio           String?
  credit        Int
  email         String       @unique(map: "email_1")
  friends       String[]
  fullname      String
  location      String?
  origin        String?
  password      String
  photo         String?
  race          String?
  username      String       @unique(map: "username_1")
  Cart          Cart[]
  Post          Post[]
  Purchase     Purchase[]

  @@map("users")
}

